(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{172:function(n,e,t){"use strict";t.r(e);var r=t(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"content"},[t("p",[n._v("1.想要一个定时提醒天气情况的场景，就想到了用python，这个是基于wxpy 来实现的")]),n._v(" "),t("p",[n._v("注意点：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("   需要安装对应插件包\n   python2 和 python3 有引入包不一样注意环境\n   想在服务器一直运行 可以参考 tmux\n")])])]),n._v(" "),t("p",[n._v("代码如下：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("# -*- coding: utf-8 -*\nimport time\nimport random\nimport requests\nfrom wxpy import *\nimport socket\nimport http\nimport  json\nimport urlparse\n#from urllib.parse import urlencode\nimport datetime\nimport urllib\nfrom threading import Timer\nfrom datetime import datetime\n\nimport sys\nreload(sys)\nsys.setdefaultencoding('utf8')\n\ndef get_everydayWords():\n    url = 'http://open.iciba.com/dsapi/'\n    r = requests.get(url)\n    content = json.loads(r.text)\n    return '每日一句：\\n'+content['content'] +'\\n'+content['note'] + \"\\n\"\n\ndef get_huangli():\n    data = {}\n    data[\"appkey\"] = ''  //填写自己申请的key  地址：jisuapi.com\n    data[\"year\"] = datetime.now().year\n    data[\"month\"] = datetime.now().month\n    data[\"day\"] = datetime.now().day\n    url_values =urllib.urlencode(data)\n    url = \"http://api.jisuapi.com/huangli/date\" + \"?\" + url_values\n    r = requests.get(url)\n    jsonarr = json.loads(r.text)\n    if jsonarr[\"status\"] != u\"0\":\n        print(jsonarr[\"msg\"])\n        return \"今日无黄历信息\"\n    result = jsonarr[\"result\"]\n    xingqi = '星期' + result['week']\n    yangli = '阳历日期：' + result['yangli']\n    nongli = '农历日期：' + result['nongli']\n    wuxing = '今日五行：' + result['wuxing']\n    chong ='今日注意的生肖:' + result[\"chong\"]\n    suici = '岁次：' + ','.join(result['suici'])\n    star = '本月星座：' + result['star']\n    shengxiao = '今年生肖：' + result['shengxiao']\n    yi = '宜：' + ','.join(result['yi'])\n    ji = '忌：' + ','.join(result['ji'])\n    return xingqi + '黄历：' + '\\n'  +  '\\n' + yangli + '\\n' + nongli + '\\n' + wuxing + '\\n' + chong + \"\\n\" + suici + \"\\n\" + star + \"\\n\" + shengxiao + \"\\n\" + yi + \"\\n\" + ji + \"\\n\"\n\ndef get_html(url, data=None):\n    # 模拟浏览器来获取网页的html代码\n    header = {\n        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n        'Accept-Encoding': 'gzip, deflate',\n        'Accept-Language': 'zh-CN,zh;q=0.8',\n        'Connection': 'keep-alive',\n        'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.235'\n    }\n    # 设定超时时间，防止被网站认为是爬虫\n    timeout = random.choice(range(80, 180))\n    while True:\n        try:\n            rep = requests.get(url, headers=header, timeout=timeout)\n            rep.encoding = \"utf-8\"\n            if rep.text[2] != 's':  # 该api调用时有失败的可能，一个简单的判断调用是否成功\n                break\n        except timeout as e:\n            print(\"3:\", e)\n            time.sleep(random.choice(range(8, 15)))\n        except socket.error as e:\n            print(\"4:\", e)\n            time.sleep(random.choice(range(20, 60)))\n        except http.client.BadStatusLine as e:\n            print(\"5:\", e)\n            time.sleep(random.choice(range(30, 80)))\n\n        except http.client.IncompleteRead as e:\n            print(\"6:\", e)\n            time.sleep(random.choice(range(5, 15)))\n\n        except:\n            print ('获取内容失败')\n            time.sleep(10)\n\n    result = ''\n    temp = rep.json()\n    result = rep.json()\n    nowTime=datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    result = result['data']\n    ondeday = result['yesterday']\n\n    result2 = '今日'+ ondeday['date'] + '\\n' \\\n    + '温度：'+ ondeday['low'] + ' --- ' + ondeday['high'] + '\\n' \\\n    + '日出：' + ondeday['sunrise'] + ' --- ' + '日落：' + ondeday['sunset'] + '\\n' \\\n    + '风向：' + ondeday['fx'] + ' --- ' + ondeday['fl'] + '\\n' \\\n    + '天气：' + ondeday['type'] + '\\n' \\\n    + '提示：' + ondeday['notice'] + '\\n' \\\n    + '湿度：' + result['shidu'] + '\\n' \\\n    + '空气质量：' + result['quality'] + '\\n' \\\n    + 'pm25：' + str(result['pm25']) + '\\n' \\\n    + '------------------------------'  + '\\n'\n    for item in result['forecast']:\n      result2 =  result2 + '日期：'+item['date'] + '\\n' \\\n        + '风力：' + item['fl'] + '\\n' \\\n        + '风向：' + item['fx'] + '\\n' \\\n        + '最高温：' + item['high'] + '\\n' \\\n        + '最低温：' + item['low'] + '\\n' \\\n        + '温馨提醒：' + item['notice'] + '\\n' \\\n        + '日出时间：' + item['sunrise'] + '\\n' \\\n        + '日落时间：' + item['sunset'] + '\\n' \\\n        + '天气：' + item['type'] + '\\n' \\\n        + '------------------------------' + '\\n' \\\n\n    result2 =  result2 + '发送时间：' +  nowTime +  '\\n'\n    return result2\n\ndef get_now(city, data=None):\n    # 模拟浏览器来获取网页的html代码\n    header = {\n        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n        'Accept-Encoding': 'gzip, deflate',\n        'Accept-Language': 'zh-CN,zh;q=0.8',\n        'Connection': 'keep-alive',\n        'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.235'\n    }\n\n    url = 'https://free-api.heweather.com/s6/weather/now?location='+city+'&key=614d3a7941034ba48088f689788e789f'\n\n    # 设定超时时间，防止被网站认为是爬虫\n    timeout = random.choice(range(80, 180))\n    while True:\n        try:\n            rep = requests.get(url, headers=header, timeout=timeout)\n            rep.encoding = \"utf-8\"\n            if rep.text[2] != 's':  # 该api调用时有失败的可能，一个简单的判断调用是否成功\n                break\n        except timeout as e:\n            print(\"3:\", e)\n            time.sleep(random.choice(range(8, 15)))\n        except socket.error as e:\n            print(\"4:\", e)\n            time.sleep(random.choice(range(20, 60)))\n        except http.client.BadStatusLine as e:\n            print(\"5:\", e)\n            time.sleep(random.choice(range(30, 80)))\n\n        except http.client.IncompleteRead as e:\n            print(\"6:\", e)\n            time.sleep(random.choice(range(5, 15)))\n\n        except:\n            print ('获取内容失败')\n            time.sleep(10)\n\n    result = ''\n    temp = rep.json()\n    temp = temp['HeWeather6'][0]\n    update = temp['update']\n    now = temp['now']\n    nowTime=datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n    result = '实时天气预报---' + '更新时间：'+ update['loc'] + '\\n'+'\\n'\\\n    + '当前天气：'+ now['cond_txt'] + '\\n'\\\n    + '当前温度：'+ now['tmp'] + '°C' + '\\n'\\\n    + '体感温度：'+ now['fl'] + '°C' + '\\n'\\\n    + '风向：'+ now['wind_dir'] + ' ' + now['wind_sc'] + '级 '+ now['wind_spd'] + '公里/小时'+ '\\n'\\\n    + '相对湿度：'+ now['hum'] + '%' + '\\n'\\\n    + '降水量：'+ now['pcpn'] + 'ml' + '\\n'\\\n    + '能见度：'+ now['vis'] + '公里' + '\\n'\\\n    + '云量：'+ now['cloud']  + '\\n'\n\n    result =  result + '发送时间：' +  nowTime \n    return result\n\ndef auto_send():  # unix时间戳设定为每天早上7：30分自动发送消息\n    while True:\n        time_now = int(time.time())\n        now = datetime.now()\n        now_str = now.strftime('%Y/%m/%d %H:%M:%S')[11:]\n\n        t = Timer(1,auto_send)\n        # t.start()\n        print(now_str)\n        #发送全部  7点24 发送 每天早上\n        if now_str in ['07:24:00']:\n            for i in ['苏州']:\n                url = 'https://www.sojson.com/open/api/weather/json.shtml?city=%s' %i\n                weather = get_html(url) \n                word = get_everydayWords()\n                huangli = get_huangli()\n                # 选择对象发送消息\n                bot.file_helper.send(weather)\n                print(bot.groups().search(u''))\n                my_friend = bot.friends().search(u'Lie')[0]\n                my_friend2 = bot.friends().search(u'cc')[0]\n                # my_group = bot.groups().search('Test')[0]\n                my_friend.send(word + weather + huangli)\n                my_friend2.send(word + weather + huangli)\n                my_group.send(word + weather + huangli)\n\n        if now_str in ['09:00:00','10:00:00','11:00:00','12:00:00','13:00:00','14:00:00','15:00:00','16:00:00','16:08:00','17:00:00','18:00:00','19:00:00','20:00:00','21:00:00',]:\n            city = '苏州'\n            \n            weather = get_now(url) \n \n            word = get_everydayWords()\n            huangli = get_huangli()\n\n            # 选择对象发送消息\n            bot.file_helper.send(weather)   // 这是发送给登陆微信的微信助手\n            print(bot.groups().search(u''))\n            my_friend = bot.friends().search(u'Lie')[0]  // 好友\n            my_friend2 = bot.friends().search(u'cc')[0]\n            my_group = bot.groups().search('Test')[0] // 群组\n            my_friend.send(weather)\n            my_friend2.send(weather)\n            my_group.send(weather)\n\n\nif __name__ == \"__main__\":\n    tuling = Tuling(api_key='') //填写自己的图灵机器人key\n    bot = Bot(cache_path=True,console_qr = True)  // 添加缓存，不用每次都扫码登陆，如果是linux 则显示二维码，需安装对应插件包\n    myself = bot.self\n    bot.enable_puid('wxpy_puid.pkl')\n    \n    @bot.register(msg_types=TEXT)  // 图灵机器人调用    \n    def auto_reply_all(msg):\n        tuling.do_reply(msg)\n        \n    auto_send()\n\n    bot.join()\n\n")])])])])}],!1,null,null,null);e.default=i.exports}}]);